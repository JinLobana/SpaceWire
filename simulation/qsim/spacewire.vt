// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/04/2023 16:18:46"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    spacewire
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module spacewire_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
reg SpWR_linkstart;
reg SpWT_linkstart;
// wires                                               
wire SpWR_connecting;
wire SpWR_do;
wire SpWR_running;
wire SpWR_so;
wire SpWR_started;
wire SpWR_txrdy;
wire SpWT_connecting;
wire SpWT_do;
wire SpWT_running;
wire SpWT_so;
wire SpWT_started;
wire SpWT_txrdy;

// assign statements (if any)                          
spacewire i1 (
// port map - connection between master ports and signals/registers   
	.CLK(CLK),
	.SpWR_connecting(SpWR_connecting),
	.SpWR_do(SpWR_do),
	.SpWR_linkstart(SpWR_linkstart),
	.SpWR_running(SpWR_running),
	.SpWR_so(SpWR_so),
	.SpWR_started(SpWR_started),
	.SpWR_txrdy(SpWR_txrdy),
	.SpWT_connecting(SpWT_connecting),
	.SpWT_do(SpWT_do),
	.SpWT_linkstart(SpWT_linkstart),
	.SpWT_running(SpWT_running),
	.SpWT_so(SpWT_so),
	.SpWT_started(SpWT_started),
	.SpWT_txrdy(SpWT_txrdy)
);
initial 
begin 
#10000000 $finish;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #25000 1'b1;
	#25000;
end 

// SpWT_linkstart
initial
begin
	SpWT_linkstart = 1'b1;
end 

// SpWR_linkstart
initial
begin
	SpWR_linkstart = 1'b1;
end 
initial 
begin 
#10000000 $finish;
end 
endmodule

